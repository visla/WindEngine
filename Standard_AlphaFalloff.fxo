
//listing of all techniques and passes with embedded asm listings 

technique Ambient
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c4, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c5, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c6, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c7, r0, r1
            
            // approximately 28 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   Projection       c0       4
            //   WorldMatrix      c8       3
            //   TextureAnimation c11      2
            //   EyePosition      c13      1
            //
            
                vs_1_1
                def c14, 1, 0, 0, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
            
            #line 104 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r1, v0.xyzx, c14.xxxy, c14.yyyx
                dp4 r0.x, r1, c4  // P<0>
                dp4 r0.y, r1, c5  // P<1>
                dp4 r0.z, r1, c6  // P<2>
                dp4 r0.w, r1, c7  // P<3>
                dp4 oPos.x, r0, c0  // OUT<0>
                dp4 oPos.y, r0, c1  // OUT<1>
            
            #line 109
                dp4 r2.x, r1, c8  // T<0>
                dp4 r2.y, r1, c9  // T<1>
                dp4 r2.z, r1, c10  // T<2>
            
            #line 106
                dp4 oPos.z, r0, c2  // OUT<2>
            
            #line 112
                add r1.xyz, -r2, c13
            
            #line 106
                dp4 oPos.w, r0, c3  // OUT<3>
            
            #line 112
                dp3 r2.x, r1, r1
            
            #line 107
                mad r0, v2.xyxx, c14.xxyy, c14.yyxx
            
            #line 112
                rsq r1.w, r2.x
                mul r1.xyz, r1, r1.w
                dp3 r2.x, v1, c8  // N<0>
                dp3 r2.y, v1, c9  // N<1>
                dp3 r2.z, v1, c10  // N<2>
            
            #line 107
                dp4 oT0.x, r0, c11  // OUT<4>
            
            #line 112
                dp3 r1.x, r1, r2
            
            #line 107
                dp4 oT0.y, r0, c12  // OUT<5>
            
            #line 112
                max oT1.xyz, -r1.x, r1.x  // ::Ambient_VS<6,7,8>
            
            // approximately 24 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4 AmbientColor;
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //   sampler2D s3;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   AmbientColor  c1       1
            //   Param1        c2       1
            //   s0            s0       1
            //   s3            s3       1
            //
            
                ps_1_4
            
            #line 285 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r0, t0
                texcrd r1.xyz, t1
            
            #line 288
                texld r3, t0
            
            #line 283
                mul r1.w, r1.x, c2.x  // D<0>
            
            #line 286
                mul r0.w, r0.w, r1.w  // Col<3>
            
            #line 289
                mul r0, r0, c0
                add r1, r3, c1
                mul r0, r0, r1  // Col<0,1,2,3>
            
            // approximately 8 instruction slots used (3 texture, 5 arithmetic)
            };
    }
}

technique Refractive
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c4, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c5, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c6, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c7, r0, r1
            
            // approximately 28 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   Projection       c0       4
            //   WorldMatrix      c8       3
            //   TextureAnimation c11      2
            //   EyePosition      c13      1
            //
            
                vs_1_1
                def c14, 1, 0, 0, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
            
            #line 104 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r1, v0.xyzx, c14.xxxy, c14.yyyx
                dp4 r0.x, r1, c4  // P<0>
                dp4 r0.y, r1, c5  // P<1>
                dp4 r0.z, r1, c6  // P<2>
                dp4 r0.w, r1, c7  // P<3>
                dp4 oPos.x, r0, c0  // OUT<0>
                dp4 oPos.y, r0, c1  // OUT<1>
            
            #line 109
                dp4 r2.x, r1, c8  // T<0>
                dp4 r2.y, r1, c9  // T<1>
                dp4 r2.z, r1, c10  // T<2>
            
            #line 106
                dp4 oPos.z, r0, c2  // OUT<2>
            
            #line 112
                add r1.xyz, -r2, c13
            
            #line 106
                dp4 oPos.w, r0, c3  // OUT<3>
            
            #line 112
                dp3 r2.x, r1, r1
            
            #line 107
                mad r0, v2.xyxx, c14.xxyy, c14.yyxx
            
            #line 112
                rsq r1.w, r2.x
                mul r1.xyz, r1, r1.w
                dp3 r2.x, v1, c8  // N<0>
                dp3 r2.y, v1, c9  // N<1>
                dp3 r2.z, v1, c10  // N<2>
            
            #line 107
                dp4 oT0.x, r0, c11  // OUT<4>
            
            #line 112
                dp3 r1.x, r1, r2
            
            #line 107
                dp4 oT0.y, r0, c12  // OUT<5>
            
            #line 112
                max oT1.xyz, -r1.x, r1.x  // ::Ambient_VS<6,7,8>
            
            // approximately 24 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4 MaterialColor;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //
            
                ps_1_4
            
            #line 302 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mov r0, c0.w  // ::Refractive_PS<0,1,2,3>
            
            // approximately 1 instruction slot used
            };
    }
}

technique DiffusePointLow
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float4 LightColor;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   WorldMatrix      c5       4
            //   Projection       c9       4
            //   TextureAnimation c13      2
            //   EyePosition      c15      1
            //   LightPosition    c16      1
            //   LightIntensity   c17      1
            //   LightColor       c18      1
            //   LightRange       c19      1
            //
            
                vs_1_1
                def c20, 1, 0, 0, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
            
            #line 122 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r2, v0.xyzx, c20.xxxy, c20.yyyx
                dp4 r3.x, r2, c5  // T<0>
                dp4 r3.y, r2, c6  // T<1>
                dp4 r3.z, r2, c7  // T<2>
            
            #line 127
                add r0.xyz, -r3, c15
                dp3 r1.x, r0, r0
                rsq r0.w, r1.x
                mul r0.xyz, r0, r0.w
            
            #line 123
                dp3 r1.x, v1, c5  // N<0>
                dp3 r1.y, v1, c6  // N<1>
                dp3 r1.z, v1, c7  // N<2>
            
            #line 133
                add r3.xyz, -r3, c16  // L<0,1,2>
            
            #line 127
                dp3 r0.x, r0, r1
                max oT2.xyz, -r0.x, r0.x  // ::DiffusePoint_VS<13,14,15>
            
            #line 124
                dp4 r0.x, r2, c0  // P<0>
                dp4 r0.y, r2, c1  // P<1>
                dp4 r0.z, r2, c2  // P<2>
                dp4 r0.w, r2, c3  // P<3>
            
            #line 129
                dp3 r1.w, v1, c8
                dp4 oPos.x, r0, c9  // OUT<0>
                dp4 r1.w, r1, r1
                rsq r1.w, r1.w
            
            #line 134
                dp3 r2.x, r3, r3
            
            #line 129
                mul r1.xyz, r1, r1.w  // OUT<6,7,8>
            
            #line 134
                rsq r1.w, r2.x
                mul r2.xyz, r3, r1.w  // L<0,1,2>
                rcp r1.w, r1.w  // r<0>
            
            #line 144
                dp3 r2.x, r1, r2
                mov r2.w, c20.x
                mad r2.w, -r1.w, c4.x, r2.w  // r<0>
            
            #line 128
                dp4 oPos.y, r0, c10  // OUT<1>
            
            #line 144
                mul r2.w, r2.x, r2.w
            
            #line 128
                dp4 oPos.z, r0, c11  // OUT<2>
            
            #line 144
                max r2.w, r2.w, c20.y
            
            #line 137
                slt r1.w, c19.x, r1.w
            
            #line 144
                min r2.w, r2.w, c20.x  // D<0>
            
            #line 128
                dp4 oPos.w, r0, c12  // OUT<3>
            
            #line 137
                mad r0.w, r1.w, -r2.w, r2.w  // D<0>
            
            #line 129
                mov oT1.xyz, r1  // ::DiffusePoint_VS<6,7,8>
            
            #line 147
                mul r0, r0.w, c18
                mul oD0, r0, c17.x  // OUT<9,10,11,12>
                mad r0, v2.xyxx, c20.xxyy, c20.yyxx
                dp4 oT0.x, r0, c13  // OUT<4>
                dp4 oT0.y, r0, c14  // OUT<5>
            
            // approximately 44 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   Param1        c1       1
            //   s0            s0       1
            //
            
                ps_1_4
            
            #line 312 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r0, t0
                texcrd r1.xyz, t2
                mul r1.w, r1.x, c1.x  // D<0>
            
            #line 313
                mul r0.w, r0.w, r1.w  // Col<3>
            
            #line 316
                mul r0, r0, c0
                mul r0, r0, v0  // Col<0,1,2,3>
            
            // approximately 6 instruction slots used (2 texture, 4 arithmetic)
            };
    }
}

technique DiffusePointHigh
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float4 LightColor;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   WorldMatrix      c5       4
            //   Projection       c9       4
            //   TextureAnimation c13      2
            //   EyePosition      c15      1
            //   LightPosition    c16      1
            //   LightIntensity   c17      1
            //   LightColor       c18      1
            //   LightRange       c19      1
            //
            
                vs_1_1
                def c20, 1, 0, 0, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
            
            #line 122 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r2, v0.xyzx, c20.xxxy, c20.yyyx
                dp4 r3.x, r2, c5  // T<0>
                dp4 r3.y, r2, c6  // T<1>
                dp4 r3.z, r2, c7  // T<2>
            
            #line 127
                add r0.xyz, -r3, c15
                dp3 r1.x, r0, r0
                rsq r0.w, r1.x
                mul r0.xyz, r0, r0.w
            
            #line 123
                dp3 r1.x, v1, c5  // N<0>
                dp3 r1.y, v1, c6  // N<1>
                dp3 r1.z, v1, c7  // N<2>
            
            #line 133
                add r3.xyz, -r3, c16  // L<0,1,2>
            
            #line 127
                dp3 r0.x, r0, r1
                max oT2.xyz, -r0.x, r0.x  // ::DiffusePoint_VS<13,14,15>
            
            #line 124
                dp4 r0.x, r2, c0  // P<0>
                dp4 r0.y, r2, c1  // P<1>
                dp4 r0.z, r2, c2  // P<2>
                dp4 r0.w, r2, c3  // P<3>
            
            #line 129
                dp3 r1.w, v1, c8
                dp4 oPos.x, r0, c9  // OUT<0>
                dp4 r1.w, r1, r1
                rsq r1.w, r1.w
            
            #line 134
                dp3 r2.x, r3, r3
            
            #line 129
                mul r1.xyz, r1, r1.w  // OUT<6,7,8>
            
            #line 134
                rsq r1.w, r2.x
                mul r2.xyz, r3, r1.w  // L<0,1,2>
                rcp r1.w, r1.w  // r<0>
            
            #line 144
                dp3 r2.x, r1, r2
                mov r2.w, c20.x
                mad r2.w, -r1.w, c4.x, r2.w  // r<0>
            
            #line 128
                dp4 oPos.y, r0, c10  // OUT<1>
            
            #line 144
                mul r2.w, r2.x, r2.w
            
            #line 128
                dp4 oPos.z, r0, c11  // OUT<2>
            
            #line 144
                max r2.w, r2.w, c20.y
            
            #line 137
                slt r1.w, c19.x, r1.w
            
            #line 144
                min r2.w, r2.w, c20.x  // D<0>
            
            #line 128
                dp4 oPos.w, r0, c12  // OUT<3>
            
            #line 137
                mad r0.w, r1.w, -r2.w, r2.w  // D<0>
            
            #line 129
                mov oT1.xyz, r1  // ::DiffusePoint_VS<6,7,8>
            
            #line 147
                mul r0, r0.w, c18
                mul oD0, r0, c17.x  // OUT<9,10,11,12>
                mad r0, v2.xyxx, c20.xxyy, c20.yyxx
                dp4 oT0.x, r0, c13  // OUT<4>
                dp4 oT0.y, r0, c14  // OUT<5>
            
            // approximately 44 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   Param1        c1       1
            //   s0            s0       1
            //
            
                ps_1_4
            
            #line 312 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r0, t0
                texcrd r1.xyz, t2
                mul r1.w, r1.x, c1.x  // D<0>
            
            #line 313
                mul r0.w, r0.w, r1.w  // Col<3>
            
            #line 316
                mul r0, r0, c0
                mul r0, r0, v0  // Col<0,1,2,3>
            
            // approximately 6 instruction slots used (2 texture, 4 arithmetic)
            };
    }
}

technique SpecularPointLow
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float4 LightColor;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   WorldMatrix      c5       4
            //   Projection       c9       4
            //   TextureAnimation c13      2
            //   EyePosition      c15      1
            //   LightPosition    c16      1
            //   LightIntensity   c17      1
            //   LightColor       c18      1
            //   LightRange       c19      1
            //
            
                vs_1_1
                def c20, 1, 0, 0, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
            
            #line 122 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r2, v0.xyzx, c20.xxxy, c20.yyyx
                dp4 r3.x, r2, c5  // T<0>
                dp4 r3.y, r2, c6  // T<1>
                dp4 r3.z, r2, c7  // T<2>
            
            #line 127
                add r0.xyz, -r3, c15
                dp3 r1.x, r0, r0
                rsq r0.w, r1.x
                mul r0.xyz, r0, r0.w
            
            #line 123
                dp3 r1.x, v1, c5  // N<0>
                dp3 r1.y, v1, c6  // N<1>
                dp3 r1.z, v1, c7  // N<2>
            
            #line 133
                add r3.xyz, -r3, c16  // L<0,1,2>
            
            #line 127
                dp3 r0.x, r0, r1
                max oT2.xyz, -r0.x, r0.x  // ::DiffusePoint_VS<13,14,15>
            
            #line 124
                dp4 r0.x, r2, c0  // P<0>
                dp4 r0.y, r2, c1  // P<1>
                dp4 r0.z, r2, c2  // P<2>
                dp4 r0.w, r2, c3  // P<3>
            
            #line 129
                dp3 r1.w, v1, c8
                dp4 oPos.x, r0, c9  // OUT<0>
                dp4 r1.w, r1, r1
                rsq r1.w, r1.w
            
            #line 134
                dp3 r2.x, r3, r3
            
            #line 129
                mul r1.xyz, r1, r1.w  // OUT<6,7,8>
            
            #line 134
                rsq r1.w, r2.x
                mul r2.xyz, r3, r1.w  // L<0,1,2>
                rcp r1.w, r1.w  // r<0>
            
            #line 144
                dp3 r2.x, r1, r2
                mov r2.w, c20.x
                mad r2.w, -r1.w, c4.x, r2.w  // r<0>
            
            #line 128
                dp4 oPos.y, r0, c10  // OUT<1>
            
            #line 144
                mul r2.w, r2.x, r2.w
            
            #line 128
                dp4 oPos.z, r0, c11  // OUT<2>
            
            #line 144
                max r2.w, r2.w, c20.y
            
            #line 137
                slt r1.w, c19.x, r1.w
            
            #line 144
                min r2.w, r2.w, c20.x  // D<0>
            
            #line 128
                dp4 oPos.w, r0, c12  // OUT<3>
            
            #line 137
                mad r0.w, r1.w, -r2.w, r2.w  // D<0>
            
            #line 129
                mov oT1.xyz, r1  // ::DiffusePoint_VS<6,7,8>
            
            #line 147
                mul r0, r0.w, c18
                mul oD0, r0, c17.x  // OUT<9,10,11,12>
                mad r0, v2.xyxx, c20.xxyy, c20.yyxx
                dp4 oT0.x, r0, c13  // OUT<4>
                dp4 oT0.y, r0, c14  // OUT<5>
            
            // approximately 44 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   Param1        c1       1
            //   s0            s0       1
            //
            
                ps_1_4
            
            #line 312 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r0, t0
                texcrd r1.xyz, t2
                mul r1.w, r1.x, c1.x  // D<0>
            
            #line 313
                mul r0.w, r0.w, r1.w  // Col<3>
            
            #line 316
                mul r0, r0, c0
                mul r0, r0, v0  // Col<0,1,2,3>
            
            // approximately 6 instruction slots used (2 texture, 4 arithmetic)
            };
    }
}

technique SpecularPointHigh
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float4 LightColor;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   WorldMatrix      c5       4
            //   Projection       c9       4
            //   TextureAnimation c13      2
            //   EyePosition      c15      1
            //   LightPosition    c16      1
            //   LightIntensity   c17      1
            //   LightColor       c18      1
            //   LightRange       c19      1
            //
            
                vs_1_1
                def c20, 1, 0, 0, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
            
            #line 122 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r2, v0.xyzx, c20.xxxy, c20.yyyx
                dp4 r3.x, r2, c5  // T<0>
                dp4 r3.y, r2, c6  // T<1>
                dp4 r3.z, r2, c7  // T<2>
            
            #line 127
                add r0.xyz, -r3, c15
                dp3 r1.x, r0, r0
                rsq r0.w, r1.x
                mul r0.xyz, r0, r0.w
            
            #line 123
                dp3 r1.x, v1, c5  // N<0>
                dp3 r1.y, v1, c6  // N<1>
                dp3 r1.z, v1, c7  // N<2>
            
            #line 133
                add r3.xyz, -r3, c16  // L<0,1,2>
            
            #line 127
                dp3 r0.x, r0, r1
                max oT2.xyz, -r0.x, r0.x  // ::DiffusePoint_VS<13,14,15>
            
            #line 124
                dp4 r0.x, r2, c0  // P<0>
                dp4 r0.y, r2, c1  // P<1>
                dp4 r0.z, r2, c2  // P<2>
                dp4 r0.w, r2, c3  // P<3>
            
            #line 129
                dp3 r1.w, v1, c8
                dp4 oPos.x, r0, c9  // OUT<0>
                dp4 r1.w, r1, r1
                rsq r1.w, r1.w
            
            #line 134
                dp3 r2.x, r3, r3
            
            #line 129
                mul r1.xyz, r1, r1.w  // OUT<6,7,8>
            
            #line 134
                rsq r1.w, r2.x
                mul r2.xyz, r3, r1.w  // L<0,1,2>
                rcp r1.w, r1.w  // r<0>
            
            #line 144
                dp3 r2.x, r1, r2
                mov r2.w, c20.x
                mad r2.w, -r1.w, c4.x, r2.w  // r<0>
            
            #line 128
                dp4 oPos.y, r0, c10  // OUT<1>
            
            #line 144
                mul r2.w, r2.x, r2.w
            
            #line 128
                dp4 oPos.z, r0, c11  // OUT<2>
            
            #line 144
                max r2.w, r2.w, c20.y
            
            #line 137
                slt r1.w, c19.x, r1.w
            
            #line 144
                min r2.w, r2.w, c20.x  // D<0>
            
            #line 128
                dp4 oPos.w, r0, c12  // OUT<3>
            
            #line 137
                mad r0.w, r1.w, -r2.w, r2.w  // D<0>
            
            #line 129
                mov oT1.xyz, r1  // ::DiffusePoint_VS<6,7,8>
            
            #line 147
                mul r0, r0.w, c18
                mul oD0, r0, c17.x  // OUT<9,10,11,12>
                mad r0, v2.xyxx, c20.xxyy, c20.yyxx
                dp4 oT0.x, r0, c13  // OUT<4>
                dp4 oT0.y, r0, c14  // OUT<5>
            
            // approximately 44 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   Param1        c1       1
            //   s0            s0       1
            //
            
                ps_1_4
            
            #line 312 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r0, t0
                texcrd r1.xyz, t2
                mul r1.w, r1.x, c1.x  // D<0>
            
            #line 313
                mul r0.w, r0.w, r1.w  // Col<3>
            
            #line 316
                mul r0, r0, c0
                mul r0, r0, v0  // Col<0,1,2,3>
            
            // approximately 6 instruction slots used (2 texture, 4 arithmetic)
            };
    }
}

technique BumpPointLow
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   Projection       c5       4
            //   WorldMatrix      c9       3
            //   TextureAnimation c12      2
            //   EyePosition      c14      1
            //   LightPosition    c15      1
            //   LightIntensity   c16      1
            //   LightRange       c17      1
            //
            
                vs_1_1
                def c18, 1, 0, 0.5, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
                dcl_tangent v3  // IN<8,9,10>
            
            #line 196 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r0, v0.xyzx, c18.xxxy, c18.yyyx
                dp4 r1.x, r0, c0  // P<0>
                dp4 r1.y, r0, c1  // P<1>
                dp4 r1.z, r0, c2  // P<2>
                dp4 r1.w, r0, c3  // P<3>
            
            #line 202
                mov r2.xyz, v3  // IN<8,9,10>
                mul r3.xyz, r2.zxyw, v1.yzxw
            
            #line 205
                dp4 oPos.x, r1, c5  // OUT<0>
            
            #line 202
                mad r2.xyz, r2.yzxw, v1.zxyw, -r3
                dp3 r6.x, r2, c9  // W2T<3>
                dp3 r6.y, r2, c10  // W2T<4>
                dp3 r6.z, r2, c11  // W2T<5>
            
            #line 198
                dp3 r3.x, v1, c9  // N<0>
                dp3 r3.y, v1, c10  // N<1>
                dp3 r3.z, v1, c11  // N<2>
            
            #line 206
                dp3 r2.y, r6, r3
            
            #line 201
                dp3 r4.x, v3, c9  // W2T<0>
                dp3 r4.y, v3, c10  // W2T<1>
                dp3 r4.z, v3, c11  // W2T<2>
            
            #line 206
                dp3 r2.x, r4, r3
                dp3 r2.z, r3, r3
                dp4 oPos.y, r1, c6  // OUT<1>
                dp3 r5.x, r2, r2
                dp4 oPos.z, r1, c7  // OUT<2>
                rsq r2.w, r5.x
                dp4 oPos.w, r1, c8  // OUT<3>
                mul r1.xyz, r2, r2.w
                mad oT1.xyz, r1, c18.z, c18.z  // OUT<6,7,8>
            
            #line 197
                dp4 r1.x, r0, c9  // T<0>
                dp4 r1.y, r0, c10  // T<1>
                dp4 r1.z, r0, c11  // T<2>
            
            #line 207
                add r5.xyz, -r1, c14
                add r2.xyz, -r1, c15  // L<0,1,2>
                dp3 r1.y, r6, r5
            
            #line 223
                dp3 r0.y, r6, r2
            
            #line 207
                dp3 r1.x, r4, r5
                dp3 r1.z, r3, r5
            
            #line 223
                dp3 r0.x, r4, r2
            
            #line 207
                dp3 r4.x, r1, r1
            
            #line 223
                dp3 r0.z, r3, r2
            
            #line 207
                rsq r0.w, r4.x
            
            #line 211
                dp3 r2.x, r2, r2
            
            #line 207
                mul oT3.xyz, r1, r0.w  // OUT<16,17,18>
            
            #line 223
                dp3 r1.x, r0, r0
            
            #line 211
                rsq r0.w, r2.x
            
            #line 223
                rsq r2.w, r1.x
            
            #line 211
                rcp r1.w, r0.w  // r<0>
                slt r0.w, c17.x, r1.w
            
            #line 218
                mov r3.w, c18.x
                mad r1.w, -r1.w, c4.x, r3.w  // r<0>
            
            #line 223
                mul oT2.xyz, r0, r2.w  // OUT<9,10,11>
            
            #line 212
                mad r0.w, r0.w, -r1.w, r1.w  // D<0>
            
            #line 224
                mul oD0, r0.w, c16.x  // ::BumpPoint_VS<12,13,14,15>
                mad r0, v2.xyxx, c18.xxyy, c18.yyxx
                dp4 oT0.x, r0, c12  // OUT<4>
                dp4 oT0.y, r0, c13  // OUT<5>
            
            // approximately 56 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float BumpIntensity;
            //   float4 LightColor;
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //   sampler2D s1;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   BumpIntensity c1       1
            //   Param1        c2       1
            //   LightColor    c3       1
            //   s0            s0       1
            //   s1            s1       1
            //
            
                ps_2_0
                def c4, 0, 0, 1, 0
                def c5, -1, -1, -2, 2
                dcl t0.xy  // IN<4,5>
                dcl t2.xyz  // IN<9,10,11>
                dcl v0  // IN<12,13,14,15>
                dcl t3.xyz  // IN<16,17,18>
                dcl_2d s0
                dcl_2d s1
            
            #line 341 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r1, t0, s1
                texld r0, t0, s0  // color<0,1,2,3>
            
            #line 345
                mad r1.xyz, c5.w, r1, c5
                mul r2.xy, r1, c1.x  // bumpNormal<0,1>
                mov r1.w, c5.x
                mad r2.w, c1.x, r1.z, -r1.w
                mul r1.w, r2.x, t3.x
                mad r1.w, r2.y, t3.y, r1.w
                mad r1.w, r2.w, t3.z, r1.w
                abs r1.w, r1.w
            
            #line 349
                mov r2.w, c1.x  // ::BumpIntensity<0>
                mad r1.xyz, r2.w, r1, c4
            
            #line 346
                mul_sat r1.w, r1.w, c2.x  // D<0>
                mul r0.w, r0.w, r1.w  // color<3>
            
            #line 354
                mul r0, r0, c0
            
            #line 349
                dp3_sat r1.x, r1, t2  // diffuse<0>
            
            #line 354
                mul r0, r0, r1.x
                mul r0, r0, c3
                mul r0, r0, v0  // color<0,1,2,3>
                mov oC0, r0  // ::Bump_PS<0,1,2,3>
            
            // approximately 20 instruction slots used (2 texture, 18 arithmetic)
            };
    }
}

technique BumpPointHigh
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   Projection       c5       4
            //   WorldMatrix      c9       3
            //   TextureAnimation c12      2
            //   EyePosition      c14      1
            //   LightPosition    c15      1
            //   LightIntensity   c16      1
            //   LightRange       c17      1
            //
            
                vs_1_1
                def c18, 1, 0, 0.5, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
                dcl_tangent v3  // IN<8,9,10>
            
            #line 196 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r0, v0.xyzx, c18.xxxy, c18.yyyx
                dp4 r1.x, r0, c0  // P<0>
                dp4 r1.y, r0, c1  // P<1>
                dp4 r1.z, r0, c2  // P<2>
                dp4 r1.w, r0, c3  // P<3>
            
            #line 202
                mov r2.xyz, v3  // IN<8,9,10>
                mul r3.xyz, r2.zxyw, v1.yzxw
            
            #line 205
                dp4 oPos.x, r1, c5  // OUT<0>
            
            #line 202
                mad r2.xyz, r2.yzxw, v1.zxyw, -r3
                dp3 r6.x, r2, c9  // W2T<3>
                dp3 r6.y, r2, c10  // W2T<4>
                dp3 r6.z, r2, c11  // W2T<5>
            
            #line 198
                dp3 r3.x, v1, c9  // N<0>
                dp3 r3.y, v1, c10  // N<1>
                dp3 r3.z, v1, c11  // N<2>
            
            #line 206
                dp3 r2.y, r6, r3
            
            #line 201
                dp3 r4.x, v3, c9  // W2T<0>
                dp3 r4.y, v3, c10  // W2T<1>
                dp3 r4.z, v3, c11  // W2T<2>
            
            #line 206
                dp3 r2.x, r4, r3
                dp3 r2.z, r3, r3
                dp4 oPos.y, r1, c6  // OUT<1>
                dp3 r5.x, r2, r2
                dp4 oPos.z, r1, c7  // OUT<2>
                rsq r2.w, r5.x
                dp4 oPos.w, r1, c8  // OUT<3>
                mul r1.xyz, r2, r2.w
                mad oT1.xyz, r1, c18.z, c18.z  // OUT<6,7,8>
            
            #line 197
                dp4 r1.x, r0, c9  // T<0>
                dp4 r1.y, r0, c10  // T<1>
                dp4 r1.z, r0, c11  // T<2>
            
            #line 207
                add r5.xyz, -r1, c14
                add r2.xyz, -r1, c15  // L<0,1,2>
                dp3 r1.y, r6, r5
            
            #line 223
                dp3 r0.y, r6, r2
            
            #line 207
                dp3 r1.x, r4, r5
                dp3 r1.z, r3, r5
            
            #line 223
                dp3 r0.x, r4, r2
            
            #line 207
                dp3 r4.x, r1, r1
            
            #line 223
                dp3 r0.z, r3, r2
            
            #line 207
                rsq r0.w, r4.x
            
            #line 211
                dp3 r2.x, r2, r2
            
            #line 207
                mul oT3.xyz, r1, r0.w  // OUT<16,17,18>
            
            #line 223
                dp3 r1.x, r0, r0
            
            #line 211
                rsq r0.w, r2.x
            
            #line 223
                rsq r2.w, r1.x
            
            #line 211
                rcp r1.w, r0.w  // r<0>
                slt r0.w, c17.x, r1.w
            
            #line 218
                mov r3.w, c18.x
                mad r1.w, -r1.w, c4.x, r3.w  // r<0>
            
            #line 223
                mul oT2.xyz, r0, r2.w  // OUT<9,10,11>
            
            #line 212
                mad r0.w, r0.w, -r1.w, r1.w  // D<0>
            
            #line 224
                mul oD0, r0.w, c16.x  // ::BumpPoint_VS<12,13,14,15>
                mad r0, v2.xyxx, c18.xxyy, c18.yyxx
                dp4 oT0.x, r0, c12  // OUT<4>
                dp4 oT0.y, r0, c13  // OUT<5>
            
            // approximately 56 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float BumpIntensity;
            //   float4 LightColor;
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //   sampler2D s1;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   BumpIntensity c1       1
            //   Param1        c2       1
            //   LightColor    c3       1
            //   s0            s0       1
            //   s1            s1       1
            //
            
                ps_2_0
                def c4, 0, 0, 1, 0
                def c5, -1, -1, -2, 2
                dcl t0.xy  // IN<4,5>
                dcl t2.xyz  // IN<9,10,11>
                dcl v0  // IN<12,13,14,15>
                dcl t3.xyz  // IN<16,17,18>
                dcl_2d s0
                dcl_2d s1
            
            #line 341 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r1, t0, s1
                texld r0, t0, s0  // color<0,1,2,3>
            
            #line 345
                mad r1.xyz, c5.w, r1, c5
                mul r2.xy, r1, c1.x  // bumpNormal<0,1>
                mov r1.w, c5.x
                mad r2.w, c1.x, r1.z, -r1.w
                mul r1.w, r2.x, t3.x
                mad r1.w, r2.y, t3.y, r1.w
                mad r1.w, r2.w, t3.z, r1.w
                abs r1.w, r1.w
            
            #line 349
                mov r2.w, c1.x  // ::BumpIntensity<0>
                mad r1.xyz, r2.w, r1, c4
            
            #line 346
                mul_sat r1.w, r1.w, c2.x  // D<0>
                mul r0.w, r0.w, r1.w  // color<3>
            
            #line 354
                mul r0, r0, c0
            
            #line 349
                dp3_sat r1.x, r1, t2  // diffuse<0>
            
            #line 354
                mul r0, r0, r1.x
                mul r0, r0, c3
                mul r0, r0, v0  // color<0,1,2,3>
                mov oC0, r0  // ::Bump_PS<0,1,2,3>
            
            // approximately 20 instruction slots used (2 texture, 18 arithmetic)
            };
    }
}

technique BumpSpecularPointLow
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   Projection       c5       4
            //   WorldMatrix      c9       3
            //   TextureAnimation c12      2
            //   EyePosition      c14      1
            //   LightPosition    c15      1
            //   LightIntensity   c16      1
            //   LightRange       c17      1
            //
            
                vs_1_1
                def c18, 1, 0, 0.5, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
                dcl_tangent v3  // IN<8,9,10>
            
            #line 196 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r0, v0.xyzx, c18.xxxy, c18.yyyx
                dp4 r1.x, r0, c0  // P<0>
                dp4 r1.y, r0, c1  // P<1>
                dp4 r1.z, r0, c2  // P<2>
                dp4 r1.w, r0, c3  // P<3>
            
            #line 202
                mov r2.xyz, v3  // IN<8,9,10>
                mul r3.xyz, r2.zxyw, v1.yzxw
            
            #line 205
                dp4 oPos.x, r1, c5  // OUT<0>
            
            #line 202
                mad r2.xyz, r2.yzxw, v1.zxyw, -r3
                dp3 r6.x, r2, c9  // W2T<3>
                dp3 r6.y, r2, c10  // W2T<4>
                dp3 r6.z, r2, c11  // W2T<5>
            
            #line 198
                dp3 r3.x, v1, c9  // N<0>
                dp3 r3.y, v1, c10  // N<1>
                dp3 r3.z, v1, c11  // N<2>
            
            #line 206
                dp3 r2.y, r6, r3
            
            #line 201
                dp3 r4.x, v3, c9  // W2T<0>
                dp3 r4.y, v3, c10  // W2T<1>
                dp3 r4.z, v3, c11  // W2T<2>
            
            #line 206
                dp3 r2.x, r4, r3
                dp3 r2.z, r3, r3
                dp4 oPos.y, r1, c6  // OUT<1>
                dp3 r5.x, r2, r2
                dp4 oPos.z, r1, c7  // OUT<2>
                rsq r2.w, r5.x
                dp4 oPos.w, r1, c8  // OUT<3>
                mul r1.xyz, r2, r2.w
                mad oT1.xyz, r1, c18.z, c18.z  // OUT<6,7,8>
            
            #line 197
                dp4 r1.x, r0, c9  // T<0>
                dp4 r1.y, r0, c10  // T<1>
                dp4 r1.z, r0, c11  // T<2>
            
            #line 207
                add r5.xyz, -r1, c14
                add r2.xyz, -r1, c15  // L<0,1,2>
                dp3 r1.y, r6, r5
            
            #line 223
                dp3 r0.y, r6, r2
            
            #line 207
                dp3 r1.x, r4, r5
                dp3 r1.z, r3, r5
            
            #line 223
                dp3 r0.x, r4, r2
            
            #line 207
                dp3 r4.x, r1, r1
            
            #line 223
                dp3 r0.z, r3, r2
            
            #line 207
                rsq r0.w, r4.x
            
            #line 211
                dp3 r2.x, r2, r2
            
            #line 207
                mul oT3.xyz, r1, r0.w  // OUT<16,17,18>
            
            #line 223
                dp3 r1.x, r0, r0
            
            #line 211
                rsq r0.w, r2.x
            
            #line 223
                rsq r2.w, r1.x
            
            #line 211
                rcp r1.w, r0.w  // r<0>
                slt r0.w, c17.x, r1.w
            
            #line 218
                mov r3.w, c18.x
                mad r1.w, -r1.w, c4.x, r3.w  // r<0>
            
            #line 223
                mul oT2.xyz, r0, r2.w  // OUT<9,10,11>
            
            #line 212
                mad r0.w, r0.w, -r1.w, r1.w  // D<0>
            
            #line 224
                mul oD0, r0.w, c16.x  // ::BumpPoint_VS<12,13,14,15>
                mad r0, v2.xyxx, c18.xxyy, c18.yyxx
                dp4 oT0.x, r0, c12  // OUT<4>
                dp4 oT0.y, r0, c13  // OUT<5>
            
            // approximately 56 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float BumpIntensity;
            //   float4 LightColor;
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //   sampler2D s1;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   BumpIntensity c1       1
            //   Param1        c2       1
            //   LightColor    c3       1
            //   s0            s0       1
            //   s1            s1       1
            //
            
                ps_2_0
                def c4, 0, 0, 1, 0
                def c5, -1, -1, -2, 2
                dcl t0.xy  // IN<4,5>
                dcl t2.xyz  // IN<9,10,11>
                dcl v0  // IN<12,13,14,15>
                dcl t3.xyz  // IN<16,17,18>
                dcl_2d s0
                dcl_2d s1
            
            #line 341 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r1, t0, s1
                texld r0, t0, s0  // color<0,1,2,3>
            
            #line 345
                mad r1.xyz, c5.w, r1, c5
                mul r2.xy, r1, c1.x  // bumpNormal<0,1>
                mov r1.w, c5.x
                mad r2.w, c1.x, r1.z, -r1.w
                mul r1.w, r2.x, t3.x
                mad r1.w, r2.y, t3.y, r1.w
                mad r1.w, r2.w, t3.z, r1.w
                abs r1.w, r1.w
            
            #line 349
                mov r2.w, c1.x  // ::BumpIntensity<0>
                mad r1.xyz, r2.w, r1, c4
            
            #line 346
                mul_sat r1.w, r1.w, c2.x  // D<0>
                mul r0.w, r0.w, r1.w  // color<3>
            
            #line 354
                mul r0, r0, c0
            
            #line 349
                dp3_sat r1.x, r1, t2  // diffuse<0>
            
            #line 354
                mul r0, r0, r1.x
                mul r0, r0, c3
                mul r0, r0, v0  // color<0,1,2,3>
                mov oC0, r0  // ::Bump_PS<0,1,2,3>
            
            // approximately 20 instruction slots used (2 texture, 18 arithmetic)
            };
    }
}

technique BumpSpecularPointHigh
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float LightRange;
            //   float4x4 ViewMatrix;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   WorldMatrix  c0       4
            //   ViewMatrix   c4       4
            //   LightRange   c8       1
            //
            
                preshader
                mul r0, c4.x, c0
                mul r2, c4.y, c1
                add r1, r0, r2
                mul r2, c4.z, c2
                add r0, r1, r2
                mul r1, c4.w, c3
                add c0, r0, r1
                mul r0, c5.x, c0
                mul r2, c5.y, c1
                add r1, r0, r2
                mul r2, c5.z, c2
                add r0, r1, r2
                mul r1, c5.w, c3
                add c1, r0, r1
                mul r0, c6.x, c0
                mul r2, c6.y, c1
                add r1, r0, r2
                mul r2, c6.z, c2
                add r0, r1, r2
                mul r1, c6.w, c3
                add c2, r0, r1
                mul r0, c7.x, c0
                mul r2, c7.y, c1
                add r1, r0, r2
                mul r2, c7.z, c2
                add r0, r1, r2
                mul r1, c7.w, c3
                add c3, r0, r1
                rcp c4.x, c8.x
            
            // approximately 29 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float3 EyePosition;
            //   float LightIntensity;
            //   float3 LightPosition;
            //   float LightRange;
            //   float4x4 Projection;
            //   float4x4 TextureAnimation;
            //   float4x4 WorldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   Projection       c5       4
            //   WorldMatrix      c9       3
            //   TextureAnimation c12      2
            //   EyePosition      c14      1
            //   LightPosition    c15      1
            //   LightIntensity   c16      1
            //   LightRange       c17      1
            //
            
                vs_1_1
                def c18, 1, 0, 0.5, 0
                dcl_position v0  // IN<0,1,2>
                dcl_normal v1  // IN<3,4,5>
                dcl_texcoord v2  // IN<6,7>
                dcl_tangent v3  // IN<8,9,10>
            
            #line 196 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                mad r0, v0.xyzx, c18.xxxy, c18.yyyx
                dp4 r1.x, r0, c0  // P<0>
                dp4 r1.y, r0, c1  // P<1>
                dp4 r1.z, r0, c2  // P<2>
                dp4 r1.w, r0, c3  // P<3>
            
            #line 202
                mov r2.xyz, v3  // IN<8,9,10>
                mul r3.xyz, r2.zxyw, v1.yzxw
            
            #line 205
                dp4 oPos.x, r1, c5  // OUT<0>
            
            #line 202
                mad r2.xyz, r2.yzxw, v1.zxyw, -r3
                dp3 r6.x, r2, c9  // W2T<3>
                dp3 r6.y, r2, c10  // W2T<4>
                dp3 r6.z, r2, c11  // W2T<5>
            
            #line 198
                dp3 r3.x, v1, c9  // N<0>
                dp3 r3.y, v1, c10  // N<1>
                dp3 r3.z, v1, c11  // N<2>
            
            #line 206
                dp3 r2.y, r6, r3
            
            #line 201
                dp3 r4.x, v3, c9  // W2T<0>
                dp3 r4.y, v3, c10  // W2T<1>
                dp3 r4.z, v3, c11  // W2T<2>
            
            #line 206
                dp3 r2.x, r4, r3
                dp3 r2.z, r3, r3
                dp4 oPos.y, r1, c6  // OUT<1>
                dp3 r5.x, r2, r2
                dp4 oPos.z, r1, c7  // OUT<2>
                rsq r2.w, r5.x
                dp4 oPos.w, r1, c8  // OUT<3>
                mul r1.xyz, r2, r2.w
                mad oT1.xyz, r1, c18.z, c18.z  // OUT<6,7,8>
            
            #line 197
                dp4 r1.x, r0, c9  // T<0>
                dp4 r1.y, r0, c10  // T<1>
                dp4 r1.z, r0, c11  // T<2>
            
            #line 207
                add r5.xyz, -r1, c14
                add r2.xyz, -r1, c15  // L<0,1,2>
                dp3 r1.y, r6, r5
            
            #line 223
                dp3 r0.y, r6, r2
            
            #line 207
                dp3 r1.x, r4, r5
                dp3 r1.z, r3, r5
            
            #line 223
                dp3 r0.x, r4, r2
            
            #line 207
                dp3 r4.x, r1, r1
            
            #line 223
                dp3 r0.z, r3, r2
            
            #line 207
                rsq r0.w, r4.x
            
            #line 211
                dp3 r2.x, r2, r2
            
            #line 207
                mul oT3.xyz, r1, r0.w  // OUT<16,17,18>
            
            #line 223
                dp3 r1.x, r0, r0
            
            #line 211
                rsq r0.w, r2.x
            
            #line 223
                rsq r2.w, r1.x
            
            #line 211
                rcp r1.w, r0.w  // r<0>
                slt r0.w, c17.x, r1.w
            
            #line 218
                mov r3.w, c18.x
                mad r1.w, -r1.w, c4.x, r3.w  // r<0>
            
            #line 223
                mul oT2.xyz, r0, r2.w  // OUT<9,10,11>
            
            #line 212
                mad r0.w, r0.w, -r1.w, r1.w  // D<0>
            
            #line 224
                mul oD0, r0.w, c16.x  // ::BumpPoint_VS<12,13,14,15>
                mad r0, v2.xyxx, c18.xxyy, c18.yyxx
                dp4 oT0.x, r0, c12  // OUT<4>
                dp4 oT0.y, r0, c13  // OUT<5>
            
            // approximately 56 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
            //
            // Parameters:
            //
            //   float BumpIntensity;
            //   float4 LightColor;
            //   float4 MaterialColor;
            //   float Param1;
            //   sampler2D s0;
            //   sampler2D s1;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   MaterialColor c0       1
            //   BumpIntensity c1       1
            //   Param1        c2       1
            //   LightColor    c3       1
            //   s0            s0       1
            //   s1            s1       1
            //
            
                ps_2_0
                def c4, 0, 0, 1, 0
                def c5, -1, -1, -2, 2
                dcl t0.xy  // IN<4,5>
                dcl t2.xyz  // IN<9,10,11>
                dcl v0  // IN<12,13,14,15>
                dcl t3.xyz  // IN<16,17,18>
                dcl_2d s0
                dcl_2d s1
            
            #line 341 "C:\Projects\WindEngine\Game\bin\system\Effects\Standard_AlphaFalloff.fx"
                texld r1, t0, s1
                texld r0, t0, s0  // color<0,1,2,3>
            
            #line 345
                mad r1.xyz, c5.w, r1, c5
                mul r2.xy, r1, c1.x  // bumpNormal<0,1>
                mov r1.w, c5.x
                mad r2.w, c1.x, r1.z, -r1.w
                mul r1.w, r2.x, t3.x
                mad r1.w, r2.y, t3.y, r1.w
                mad r1.w, r2.w, t3.z, r1.w
                abs r1.w, r1.w
            
            #line 349
                mov r2.w, c1.x  // ::BumpIntensity<0>
                mad r1.xyz, r2.w, r1, c4
            
            #line 346
                mul_sat r1.w, r1.w, c2.x  // D<0>
                mul r0.w, r0.w, r1.w  // color<3>
            
            #line 354
                mul r0, r0, c0
            
            #line 349
                dp3_sat r1.x, r1, t2  // diffuse<0>
            
            #line 354
                mul r0, r0, r1.x
                mul r0, r0, c3
                mul r0, r0, v0  // color<0,1,2,3>
                mov oC0, r0  // ::Bump_PS<0,1,2,3>
            
            // approximately 20 instruction slots used (2 texture, 18 arithmetic)
            };
    }
}

